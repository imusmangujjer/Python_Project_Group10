# -*- coding: utf-8 -*-
"""Python_Project_1.0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16RWjlxAn-FQI5RdDbBbahniUrHTa26mk
"""

# data_collection/pandas_scraper.py
import pandas as pd

# URLs for batting and bowling records
batting_url = 'https://www.espncricinfo.com/records/tournament/batting-most-runs-career/icc-cricket-world-cup-2023-24-15338'
bowling_url = 'https://www.espncricinfo.com/records/tournament/bowling-most-wickets-career/icc-cricket-world-cup-2023-24-15338'

# Scrape data using Pandas directly from the web tables
batting_df = pd.read_html(batting_url)[0]
bowling_df = pd.read_html(bowling_url)[0]

# Rename columns to match the expected SQLite table schema
batting_df.rename(columns={'Player': 'Player', 'Team': 'Team', 'Runs': 'Runs', 'HS': 'HS', 'Ave': 'Average', 'SR': 'StrikeRate', '100': 'Hundreds', '50': 'Fifties', 'Span': 'Span'}, inplace=True)
bowling_df.rename(columns={'Player': 'Player', 'Team': 'Team', 'Mat': 'Matches', 'Inns': 'Innings', 'Runs': 'Runs', 'Wkts': 'Wickets', 'Ave': 'Average', 'Econ': 'Economy', 'BBI': 'BestBowling', '5': 'FiveWickets', '10': 'TenWickets', 'Span': 'Span'}, inplace=True)

# Database operations
import sqlite3

# Create SQLite connection and cursor
conn = sqlite3.connect('cricket_records.db')
cursor = conn.cursor()

# Create tables and insert data

# Create tables and insert data
cursor.execute('''CREATE TABLE batting_record (
                  Player TEXT,
                  Team TEXT,
                  Runs INTEGER,
                  Hs INTEGER
                  Average REAL,
                  StrikeRate REAL,
                  Hundreds INTEGER,
                  Fifties INTEGER
                  )''')

cursor.execute('''CREATE TABLE bowling_record (
                  Player TEXT,
                  Team TEXT,
                  Wickets INTEGER,
                  Average REAL,
                  Economy REAL,
                  BestBowling TEXT,
                  FiveWickets INTEGER
                  )''')

batting_df.to_sql('batting_record', conn, if_exists='replace', index=False)
bowling_df.to_sql('bowling_record', conn, if_exists='replace', index=False)

# Commit changes and close connection
#conn.commit()
conn.close()

batting_df.Player[5], batting_df.HS[5]

import sqlite3
import pandas as pd

# Read batting data
batting_url = "https://www.espncricinfo.com/records/tournament/batting-most-runs-career/icc-cricket-world-cup-2023-24-15338"
batting_record = pd.read_html(batting_url)[0]

# Read bowling data
bowling_url = "https://www.espncricinfo.com/records/tournament/bowling-most-wickets-career/icc-cricket-world-cup-2023-24-15338"
bowling_record = pd.read_html(bowling_url)[0]

# Rename problematic columns in the DataFrames
batting_record.rename(columns={'4w': 'FourWickets', '5w': 'FiveWickets'}, inplace=True)
bowling_record.rename(columns={'4w': 'FourWickets', '5w': 'FiveWickets'}, inplace=True)

# Create SQLite connection and cursor
conn = sqlite3.connect('cricket_records.db')
cursor = conn.cursor()

# Create batting table and insert data
cursor.execute('''
    CREATE TABLE IF NOT EXISTS batting_record (
        Player TEXT,
        Span TEXT,
        Mat INTEGER,
        Inns INTEGER,
        NO INTEGER,
        Runs INTEGER,
        HS TEXT,
        Ave REAL,
        BF INTEGER,
        SR REAL,
        Hundreds INTEGER,
        Fifties INTEGER,
        Fours INTEGER,
        Sixes INTEGER
    )
''')
batting_record.to_sql('batting_record', conn, if_exists='replace', index=False)

# Create bowling table and insert data
cursor.execute('''
    CREATE TABLE IF NOT EXISTS bowling_record (
        Player TEXT,
        Span TEXT,
        Mat INTEGER,
        Inns INTEGER,
        Balls INTEGER,
        Runs INTEGER,
        Wkts INTEGER,
        BBI TEXT,
        BBM TEXT,
        Ave REAL,
        Econ REAL,
        SR REAL,
        FourWickets INTEGER,
        FiveWickets INTEGER
    )
''')
bowling_record.to_sql('bowling_record', conn, if_exists='replace', index=False)

# Commit changes and close connection
conn.commit()
conn.close()

batting_record.Player[5], batting_record.HS[5]

